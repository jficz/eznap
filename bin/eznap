#!/usr/bin/env bash

appId="cz.jfi.eznap"
appName="eznap"
version="0.2.2"

declare -A _keep
## Default number of snapshots to keep for each label
#
_keep=(
  [frequent]='96'
  [hourly]='48'
  [daily]='14'
  [weekly]='8'
  [monthly]='12'
)

ret=0

usage() {
  echo "Usage: $0 <$(printf '%s | ' ${!_keep[@]} | head -c -3)>"
  echo "Retun codes: 0 - success"
  echo "             1 - fatal failure, no changes made"
  echo "             2 - partial failure, some changes possibly made"
}

err() {
  echo $* > /dev/stderr
}

failcode() {
  ret=$1
  shift
  err $*
  exit $ret
}

fail() {
  failcode 1 $*
}

snapsToDestroy() {
  readarray -tn 0 line

  ## remove first $1 lines from output
  ## that is, print all snapshots that should be destroyed
  ## assuming they are sorted by date, oldest last
  #
  printf '%s\n' "${line[@]:$1}"
}

_zfs=$(PATH=$PATH:/usr/sbin:/sbin:/usr/bin:/bin command -v zfs 2> /dev/null)
[[ $? -gt 0 ]] && fail '`zfs` command not found.'

[[ -z "$1" ]] && fail "Missing label." `usage`

[[ -z "${_keep[$1]}" ]] && fail "Wrong label." `usage`

label=$1

## -H makes the output script-friendly
#
DATASETS=$(
  env LC_ALL=C \
  $_zfs list -H \
  -t filesystem,volume \
  -o name,com.sun:auto-snapshot,com.sun:auto-snapshot:$label \
  2>&1
)

[[ $? -gt 0 ]] && fail -e "Error enumerating zfs datasets. Command output:\n" "$DATASETS"

while read dataset snap keep; do

  case "${keep,,}" in
  ## '-' (not set) and 'true' means use default retention
    "-" | "true")  keep=${_keep[$label]} ;;
  ## anything else but a positive integer means no snapshot
    '' | *[!0-9]*) snap=false ;;
  esac

  if [[ "${snap,,}" = "true" ]]; then

    if [[ $keep -gt 0 ]]; then
      _date=$(TZ=UTC printf '%(%F_%T)TZ')
      SNAPPROPS="-o ${appId}:label=$label"
      SNAPNAME="${dataset}@${appName}-${label}_${_date}"
      $_zfs snapshot $SNAPPROPS "$SNAPNAME" 2>/dev/null
      [[ $? -gt 0 ]] && err "Create snapshot failed for '$SNAPNAME'." && ret=2
    fi

    SNAPSHOTS=$(
      env LC_ALL=C \
      $_zfs list -H \
      -t snapshot \
      -S creation \
      -o name,${appId}:label \
      $dataset
    )
    [[ $? -gt 0 ]] && failcode 2 "Error enumerating zfs snapshots. No old snapshots deleted for dataset '${dataset}'."

    DESTROY=$(
      while read sname slabel; do
        if [[ "${sname%%@*}" = "$dataset" && "$slabel" = "$label" ]]; then
          echo $sname
        fi
      done <<< $SNAPSHOTS | snapsToDestroy $keep
    )

    for sn in $DESTROY; do
      $_zfs destroy "$sn" 2>/dev/null
      [[ $? -gt 0 ]] && err "Destroy snapshot failed for '$sn'." && ret=2
    done

  fi
done <<< $DATASETS

exit $ret
